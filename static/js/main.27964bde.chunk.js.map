{"version":3,"sources":["reducers/selectedmovies.js","constants/actionTypes.js","reducers/movies.js","reducers/isLoading.js","constants/labels.js","reducers/index.js","actions/apiActions.js","middleware/api.js","containers/DevTools.js","store/configureStore.js","store/index.js","styled/StyledContainer.js","constants/theme.js","utils/styledUtils.js","styled/StyledMovieContainer.js","styled/StyledHeader.js","components/FontAwesomeIcon.js","styled/StyledHeaderTitle.js","styled/StyledHorizontalScroll.js","styled/StyledMovie.js","styled/StyledPoster.js","styled/StyledMovieTitle.js","styled/StyledMovieLengthYear.js","components/Movie.js","styled/StyledFooter.js","styled/StyledLargeBtn.js","styled/StyledLoader.js","styled/StyledMovieLink.js","components/Movies.js","utils/appUtils.js","actions/movieActions.js","containers/MoviesContainer.js","styled/StyledHeaderLink.js","components/MovieDetails.js","containers/MovieDetailsContainer.js","components/App.js","containers/root.js","injectGlobalStyles.js","serviceWorker.js","index.js"],"names":["handleActions","state","action","payload","produce","persistConfig","key","storage","rootReducer","combineReducers","movies","selectedMovie","isLoading","persistedReducer","persistReducer","apiStart","createAction","apiEnd","axios","defaults","baseURL","headers","common","api","dispatch","next","type","method","url","data","onSuccess","onFailure","label","dataOrParams","includes","request","then","catch","error","finally","createDevTools","toggleVisibilityKey","changePositionKey","store","createStore","compose","applyMiddleware","logger","DevTools","instrument","persiststore","persistStore","configureStore","StyledContainer","styled","div","props","theme","primaryBg","secondaryBg","posterWidth","posterHeight","devices","css","StyledMovieContainer","section","StyledHeader","header","FontAwesomeIcon","icon","text","className","Boolean","StyledHeaderTitle","h1","StyledHorizontalScroll","StyledMovie","StyledPoster","img","StyledMovieTitle","StyledMovieLengthYear","Movie","poster","name","duration","year","src","alt","StyledFooter","footer","StyledLargeBtn","button","StyledLoader","span","StyledMovieLink","a","Movies","useEffect","console","log","getMovies","loading","map","movie","href","id","noOp","getMoviesAC","setMovies","movieSchema","schema","Entity","movieListSchema","Array","normalize","entities","selectMovie","connect","_","shuffle","values","StyledHeaderLink","StyledMovieDetails","StyledMovieInfo","StyledMovieDesc","StyledSmallBtn","MovieDetails","this","movieId","match","params","details","isExpanded","isLarge","count","size","color2","Component","defaultProps","trailer","App","exact","path","component","MoviesContainer","MovieDetailsContainer","StrictMode","persistor","createGlobalStyle","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.27964bde.chunk.js","sourcesContent":["import { handleActions } from \"redux-actions\";\nimport { SELECT_MOVIE } from \"../constants/actionTypes\";\n\nexport default handleActions(\n  {\n    [SELECT_MOVIE]: (state, action) => action.payload\n  },\n  1\n);","export const GET_MOVIES = \"GET_MOVIES\";\nexport const SELECT_MOVIE = \"SELECT_MOVIE\";\nexport const API = \"API\";\nexport const API_START = \"API_START\";\nexport const API_END = \"API_END\"; \nexport const SET_MOVIES = \"SET_MOVIES\";","import { handleActions} from 'redux-actions';\nimport { SET_MOVIES } from \"../constants/actionTypes\"\n\nexport default handleActions({\n    ['SET_MOVIES']: (state, action) => action.payload\n},{});","import { handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport { API_START, API_END } from \"../constants/actionTypes\";\nimport { GET_MOVIES } from \"../constants/labels\";\n\nexport default handleActions(\n  {\n    [API_START]: produce((state, action) => {\n      if (action.payload === GET_MOVIES) state[GET_MOVIES] = true;\n    }),\n    [API_END]: produce((state, action) => {\n      if (action.payload === GET_MOVIES) state[GET_MOVIES] = false;\n    })\n  },\n  {}\n); ","export const GET_MOVIES = \"GET_MOVIES\";","import { combineReducers} from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from \"redux-persist/lib/storage\";\nimport selectedMovie from './selectedmovies';\nimport movies from './movies';\nimport isLoading from './isLoading';\n\n\nconst persistConfig = {\n    key :\"netflixy\",\n    storage\n}\n\nconst rootReducer = combineReducers({\n    movies,\n    selectedMovie,\n    isLoading\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport default persistedReducer;","import { createAction } from \"redux-actions\";\nimport { API_START, API_END } from \"../constants/actionTypes\";\n\nexport const apiStart = createAction(API_START);\nexport const apiEnd = createAction(API_END);","import axios from \"axios\";\nimport { API } from \"../constants/actionTypes\";\nimport { apiEnd, apiStart } from \"../actions/apiActions\";\n\n//axios default config\naxios.defaults.baseURL = \"https://sleez007.github.io/Netflixy-App/data.json\";\naxios.defaults.headers.common[\"Content-Type\"] = \"application/json\";\naxios.defaults.headers.common[\"Authorization\"] = `Bearer ${\"fakeAccessToken\"}`;\n\n//actual middleware implementation\nconst api = ({ dispatch }) => next => action => {\n  next(action);\n  if (action.type !== API) return;\n\n  const { url, method, data, onSuccess, onFailure, label } = action.payload;\n  const dataOrParams = [\"GET\", \"DELETE\"].includes(method) ? \"params\" : \"data\";\n\n  // blow the horn - api requested has started!\n  if (label) {\n    dispatch(apiStart(label));\n  }\n  //make actual request\n  axios\n    .request({\n      url:'',\n      method,\n      [dataOrParams]: data\n    })\n    .then(({ data }) => {\n      dispatch(onSuccess(data));\n    })\n    .catch(error => {\n      dispatch(onFailure(error));\n    })\n    .finally(() => {\n      // blow the horn - api requested has ended!\n      if (label) {\n        dispatch(apiEnd(label));\n      }\n    });\n};\n\nexport default api;","import React from \"react\";\nimport { createDevTools } from \"redux-devtools\";\nimport DockMonitor from \"redux-devtools-dock-monitor\";\nimport LogMonitor from \"redux-devtools-log-monitor\";\n\nexport default createDevTools(\n  <DockMonitor toggleVisibilityKey=\"ctrl-h\" changePositionKey=\"ctrl-q\">\n    <LogMonitor />\n  </DockMonitor>\n);","import { createStore, applyMiddleware, compose } from \"redux\";\nimport logger from 'redux-logger'\nimport { persistStore } from \"redux-persist\";\nimport rootReducer from \"../reducers\";\nimport api from \"../middleware/api\";\nimport DevTools from \"../containers/DevTools\";\n\nconst configureStore = () => {\n  const store = createStore(rootReducer, compose(applyMiddleware(api,logger),DevTools.instrument()));\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers', () => {\n      store.replaceReducer(rootReducer)\n    })\n  }\n  const persiststore = persistStore(store);\n  return { store, persiststore };\n};\n\nexport default configureStore;","import configureStore from \"./configureStore\";\nconst { store, persiststore } = configureStore();\nexport { persiststore, store as default };","import styled from \"styled-components\";\n\nconst StyledContainer = styled.div`\n  background: ${props => props.theme.primaryBg};\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &:before {\n    content: \"NETFLIXY\";\n    position: fixed;\n    top: 18vh;\n    left: 10vw;\n    font-size: 9vw;\n    color: rgba(255, 255, 255, 0.03);\n  }\n`;\nexport default StyledContainer;","const theme = {\n    primaryBg: \"#333852\",\n    secondaryBg: \"#282A31\",\n    posterWidth: \"127px\",\n    posterHeight: \"191px\"\n};\nexport default theme;","import { css } from \"styled-components\";\n\nexport const devices = {\n    sm: (...args) => css`\n        @media (min-width: 576px) {\n            ${css(...args)};\n        }\n    `,\n    md: (...args) => css`\n        @media (min-width: 768px) {\n            ${css(...args)};\n        }\n    `,\n    lg: (...args) => css`\n    @media (min-width: 992px) {\n      ${css(...args)};\n    }\n    `,\n    xl: (...args) => css`\n        @media (min-width: 1200px) {\n        ${css(...args)};\n        }\n    `\n}\n","import styled from \"styled-components\";\nimport { devices } from \"../utils/styledUtils\";\n\nconst StyledMovieContainer = styled.section`\n  background: ${props => props.theme.secondaryBg};\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  \n  ${devices.md`\n    width: 640px;\n    height: 390px;\n    border-radius: 15px;\n  `};\n`;\n\nexport default StyledMovieContainer;","import styled from \"styled-components\";\nconst StyledHeader = styled.header`\n  height: 70px;\n  display: flex;\n  color: #8b9095;\n  font-size: 0.8rem;\n  align-items: center;\n  padding:10px;\n`;\n\nexport default StyledHeader;","import React from \"react\";\n\nconst FontAwesomeIcon = ({ icon = \"ellipsis-h\", text = false }) => (\n  <>\n    <span className={`fas fa-${icon}`} />\n    {Boolean(text) && <span> &nbsp; {text}</span>}\n  </>\n);\n\nexport default FontAwesomeIcon;","import styled from \"styled-components\";\n\nconst StyledHeaderTitle = styled.h1`\n  font-size: inherit;\n  margin: 0 auto;\n`;\n\nexport default StyledHeaderTitle;","import styled from \"styled-components\";\n\nconst StyledHorizontalScroll = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  align-items: center;\n  overflow: auto;\n  flex: 1 1 0;\n`;\n\nexport default StyledHorizontalScroll;","import styled from \"styled-components\";\n\nconst StyledMovie = styled.div`\n  padding: 0.6rem;\n`;\n\nexport default StyledMovie;","import styled from \"styled-components\";\n\nconst StyledPoster = styled.img`\n  width: ${props => props.theme.posterWidth};\n  height: ${props => props.theme.posterHeight};\n  border-radius: 4px;\n`;\n\nexport default StyledPoster;","import styled from \"styled-components\";\n\nconst StyledMovieTitle = styled.div`\n  color: #525661;\n  margin-bottom: 4px;\n  font-size: 1rem;\n  width: ${props => props.theme.posterWidth};\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nexport default StyledMovieTitle;","import styled from \"styled-components\";\n\nconst StyledMovieLengthYear = styled.div`\n  font-size: 11px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nexport default StyledMovieLengthYear;","import React from \"react\";\nimport StyledMovie from \"../styled/StyledMovie\";\nimport StyledPoster from \"../styled/StyledPoster\";\nimport StyledMovieTitle from \"../styled/StyledMovieTitle\";\nimport StyledMovieLengthYear from \"../styled/StyledMovieLengthYear\";\n\nconst Movie = ({ poster, name, duration, year }) => (\n  <StyledMovie>\n    <StyledPoster src={poster} alt={`Movie: ${name}`} />\n    <StyledMovieTitle>{name}</StyledMovieTitle>\n    <StyledMovieLengthYear>{`${duration} ${year}`}</StyledMovieLengthYear>\n  </StyledMovie>\n);\n\nexport default Movie; ","import styled from \"styled-components\";\n\nconst StyledFooter = styled.footer`\n  height: 60px;\n`;\n\nexport default StyledFooter;","import styled from \"styled-components\";\nimport { devices } from \"../utils/styledUtils\";\n\nconst StyledLargeBtn = styled.button`\n  border: 0;\n  border-radius: 5px;\n  color: #fff;\n  width: 100%;\n  height: 50px;\n  display: block;\n  margin: 0 auto;\n  background: #eb6259;\n  transition: all 0.1s cubic-bezier(0.67, 0.13, 0.1, 0.81);\n\n  &:hover {\n    cursor: pointer;\n    transform: translateY(2px);\n    box-shadow: 10px 55px 150px -20px #2a628f;\n  }\n\n  &:active {\n    transform: translateY(4px);\n    background: #2a628f;\n  }\n\n  &:after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: -1;\n    transform: scaleY(0);\n    background: #ac4743;\n    transition: transform 1s cubic-bezier(0.19, 1, 0.22, 1);\n  }\n\n  ${devices.md`\n    width: 60%;\n    position: relative; \n    top: 80%;\n  `};\n`;\n\nexport default StyledLargeBtn;","import styled from \"styled-components\";\n\nconst StyledLoader = styled.span`\n    margin: 0 auto;\n    width: 35px;\n    height: 35px;\n    border:  5px solid rgba(189,189,189 ,0.25);\n    border-left-color: rgba(3,155,229 ,1);\n    border-top-color: rgba(3,155,229 ,1);\n    border-radius: 50%;\n    display: inline-block;\n    animation: rotate 600ms infinite linear;\n  \n  @keyframes rotate {\n    to {\n      transform: rotate(1turn)\n    }\n  }\n`;\n\nexport default StyledLoader;","import styled from \"styled-components\";\n\nconst StyledMovieLink = styled.a`\n  text-decoration: none;\n  cursor: pointer;\n`;\n\nexport default StyledMovieLink;","import React, { useEffect } from \"react\";\nimport StyledHeader from \"../styled/StyledHeader\";\nimport FontAwesomeIcon from \"./FontAwesomeIcon\";\nimport StyledHeaderTitle from \"../styled/StyledHeaderTitle\";\nimport StyledHorizontalScroll from \"../styled/StyledHorizontalScroll\";\nimport Movie from \"./Movie\";\nimport StyledFooter from \"../styled/StyledFooter\";\nimport StyledLargeBtn from \"../styled/StyledLargeBtn\";\nimport StyledLoader from '../styled/StyledLoader';\nimport StyledMovieLink from \"../styled/StyledMovieLink\";\n\nconst Movies = (props) => {\n    useEffect(()=>{\n        console.log('hi nn');\n        props.getMovies();\n    },[]);\n    return <>\n        <StyledHeader>\n            <FontAwesomeIcon icon=\"bars\" text=\"help\" />\n            <StyledHeaderTitle>The Movie Recommender</StyledHeaderTitle>\n            <FontAwesomeIcon icon=\"search\" />\n        </StyledHeader>\n        <StyledHorizontalScroll>\n            {/* the list of movies */}\n            {props.loading\n            ? <StyledLoader/>\n            : props.movies.map(movie => (\n                <StyledMovieLink href={`/movies/${movie.id}`} key={movie.id}>\n                    <Movie\n                        name={movie.name}\n                        poster={movie.poster}\n                        duration={movie.duration}\n                        year={movie.year}\n                    />\n                </StyledMovieLink>\n             ))}\n        </StyledHorizontalScroll>\n        <StyledFooter>\n            <StyledLargeBtn>Get Recommended Movies</StyledLargeBtn>\n        </StyledFooter>\n    </>\n};\n\nexport default Movies;","const noOp = () => ({ type: \"NO_OP\" });\n\nexport const apiPayloadCreator = ({\n  url = \"/\",\n  method = \"GET\",\n  onSuccess = noOp,\n  onFailure = noOp,\n  label = \"\",\n  data = null\n}) => ({\n  url,\n  method,\n  onSuccess,\n  onFailure,\n  data,\n  label\n});","import { createAction } from \"redux-actions\";\nimport { normalize, schema } from \"normalizr\"; \nimport { apiPayloadCreator } from \"../utils/appUtils\";\nimport { API } from \"../constants/actionTypes\";\nimport { SET_MOVIES, SELECT_MOVIE} from '../constants/actionTypes';\nimport { GET_MOVIES } from '../constants/labels';\n\nconst getMoviesAC = createAction(API, apiPayloadCreator);\n\nexport const getMovies = () =>\n  getMoviesAC({ url: \"/vcvx0\", onSuccess: setMovies, label : GET_MOVIES });\n\nfunction setMovies(movies) {\n  const movieSchema = new schema.Entity(\"movies\");\n  const movieListSchema = new schema.Array(movieSchema);\n  const normalizedData = normalize(movies, movieListSchema);\n  return {\n    type: SET_MOVIES,\n    payload: normalizedData.entities.movies\n  };\n}\n\nexport const selectMovie = createAction(SELECT_MOVIE);","import React from \"react\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport Movies from \"../components/Movies\";\nimport {getMovies} from '../actions/movieActions';\nimport { GET_MOVIES } from \"../constants/labels\";\n\nconst MoviesContainer = props => <Movies {...props} />;\n\nconst mapStateToProps = state => ({\n  movies:_.shuffle(_.values(state.movies)),\n  loading: state.isLoading[GET_MOVIES]\n});\n\nexport default connect(\n  mapStateToProps,\n  {getMovies}\n)(MoviesContainer); ","import styled from \"styled-components\";\n\nconst StyledHeaderLink = styled.a`\n  color: inherit;\n  text-decoration: none;\n  margin-left: auto;\n\n  &:hover {\n    color: #fff;\n  }\n`;\n\nexport default StyledHeaderLink;","import React,{Fragment, Component} from \"react\";\nimport ReactStars from \"react-stars\";\nimport StyledHeader from \"../styled/StyledHeader\";\nimport FontAwesomeIcon from \"./FontAwesomeIcon\";\nimport StyledHeaderLink from '../styled/StyledHeaderLink';\nimport styled from \"styled-components\";\nimport StyledPoster from \"../styled/StyledPoster\";\nimport StyledMovieTitle from \"../styled/StyledMovieTitle\";\nimport StyledMovieLengthYear from \"../styled/StyledMovieLengthYear\";\nimport { devices } from \"../utils/styledUtils\";\n\n\nconst StyledMovieDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  ${devices.md`\n    flex-direction: row;\n  `};\n`;\n\nconst StyledMovieInfo = styled.div`\n  padding: 2rem 0 1rem 0;\n  ${devices.md`\n    ${\n      \"\" /* the left margin is required to accomodate the space left when the poster image is positioned absolutely i.e moved up */\n    }\n    margin-left: 13rem;\n  `};\n`;\n\nconst StyledMovieDesc = styled.div`\n  margin-top: 30px;\n  font-size: 0.8rem;\n  line-height: 1.5;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst StyledSmallBtn = styled.a`\n  background: #eb6259;\n  border: none;\n  border-radius: 20px;\n  color: #fff;\n  font-size: 12px;\n  line-height: 1.5;\n  display: inline-block;\n  padding: 8px 17px;\n  margin: 20px 0 15px 0;\n  text-transform: uppercase;\n  z-index: 10;\n  outline: none !important;\n  cursor: pointer;\n  &:active {\n    transform: translateY(4px);\n  }\n`;\n\nclass MovieDetails extends Component {\n  static defaultProps = {\n    selectedMovie: {\n      name: \"\",\n      poster: \"\",\n      year: \"\",\n      duration: \"\",\n      trailer: \"\",\n      details: \"\",\n      id: \"0\"\n    }\n  };\n  componentDidMount() {\n    console.log(this.props);\n    // react router passes some props to every route component. The MovieDetailsContainer component has forwarded those to this component as well.\n    //For example when you hit the route /movies/:id, the \"id\" can be gotten from this.props.match.params.id - thanks to react-router.\n    const movieId = +this.props.match.params.id;\n    this.props.selectMovie(movieId);\n  }\n  render() {\n    const { poster, name, duration, details, year } = this.props.selectedMovie;\n    return (\n      <Fragment>\n        {/* header */}\n        <StyledHeader>\n          <StyledHeaderLink href=\"/\">\n            <FontAwesomeIcon icon=\"chevron-left\" text=\"Go back\" />\n          </StyledHeaderLink>\n        </StyledHeader>\n        {/* actual movie details */}\n        <StyledMovieDetails>\n          {/* Note the \"isExpanded\" prop passed to StyledPoster   */}\n          <StyledPoster src={poster} alt={`Movie: ${name}`} isExpanded />\n          <StyledMovieInfo>\n            {/* Note the \"isLarge\" prop passed to StyledMovieTitle   */}\n            <StyledMovieTitle isLarge> {name} </StyledMovieTitle>\n            <StyledMovieLengthYear\n            >{`${duration} ${year}`}</StyledMovieLengthYear>\n            <StyledMovieDesc>{details}</StyledMovieDesc>\n            <StyledSmallBtn>watch trailer</StyledSmallBtn>\n            {/* ReactStars is a simple component from the OSS module, https://github.com/n49/react-stars */}\n            <ReactStars count={5} size={24} color2={\"#ffd700\"} />\n          </StyledMovieInfo>\n        </StyledMovieDetails>\n      </Fragment>\n    );\n  }\n}\n\nexport default MovieDetails;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport MovieDetails from \"../components/MovieDetails\";\nimport { selectMovie } from \"../actions/movieActions\";\n\nconst MovieDetailsContainer = props => <MovieDetails {...props} />;\n\nconst mapStateToProps = state => ({\n  selectedMovie: state.movies[state.selectedMovie]\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    selectMovie\n  }\n)(MovieDetailsContainer);\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport StyledMovieContainer from \"../styled/StyledMovieContainer\";\nimport MoviesContainer from \"../containers/MoviesContainer\";\nimport MovieDetails from \"./MovieDetails\";\nimport MovieDetailsContainer from \"../containers/MovieDetailsContainer\";\n\nconst App = () => {\n  return <StyledMovieContainer>\n        <Route exact path=\"/\" component={MoviesContainer} />\n        <Route exact path=\"/movies/:id\" component={MovieDetailsContainer} />\n  </StyledMovieContainer>;\n};\n\nexport default App;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport { ToastContainer } from \"react-toastify\"\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store, { persiststore } from \"../store\";\nimport DevTools from './DevTools';\nimport StyledContainer from \"../styled/StyledContainer\";\nimport theme from '../constants/theme';\nimport App from '../components/App';\n\nexport default ()=>{\n   return  (<React.StrictMode>\n    <Provider store={store}>\n        <ToastContainer />\n        <PersistGate persistor={persiststore} loading={null}>\n            <ThemeProvider theme={theme}>\n                <StyledContainer>\n                    <Router>\n                        <App />\n                    </Router>\n                    <DevTools/>\n                </StyledContainer>\n            </ThemeProvider>\n        </PersistGate>\n    </Provider>\n  </React.StrictMode>);\n}","import { createGlobalStyle } from \"styled-components\";\n\nexport default  createGlobalStyle`\n    *::before,\n    *::after,\n    * {\n       box-sizing: border-box;\n    }\n\n    html,\n    body {\n        height: 100%;\n    } \n    body {\n        margin: 0;\n        padding: 0;\n        font-family: \"Roboto\", sans-serif;\n    }\n\n    #root {\n        min-height: 100vh;\n    }\n`;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './containers/root';\nimport InjectGlobalStyles from './injectGlobalStyles';\n\nimport * as serviceWorker from './serviceWorker';\n\n \nReactDOM.render(\n  <>\n    <InjectGlobalStyles/>\n    <Root/>\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}